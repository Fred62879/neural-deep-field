parent: base.yaml

global:
    use_tqdm: True
    exp_name: spectral-inpaint
    log_fname: main_train

    tasks: [train, main_train]
    # tasks: [infer, main_infer, recon_img]
    # tasks: [test]
    # recon_img, recon_synthetic_band
    # log_pixel_value, save_qtz_weights, save_soft_qtz_weights, log_soft_qtz_weights
    # plot_scaler, plot_redshift, plot_embed_map, plot_latent_embed, plot_gt_pixel_distrib
    # recon_dummy_spectra, recon_gt_spectra, recon_codebook_spectra, recon_codebook_spectra_individ

optimizer:
    optimizer_type: adam

    b1: 0.5
    b2: 0.999
    lr: 1e-4
    grid_lr: 1e-3
    spectra_latents_lr: 1e-3
    redshift_latents_lr: 1e-1
    codebook_lr: 1e-6
    weight_decay: 1e-5
    grid_lr_weight: 100
    sgd_momentum: 0.9

net:
    nef_type: AstroHyperSpectralNerf

    model_redshift: True
    redshift_model_method: classification
    redshift_classification_method: argmax

    encode_wave: True
    wave_encode_method: positional_encoding
    wave_embed_dim: 32
    linear_norm_wave: True
    wave_multiplier: 64 # 20

    encode_coords: True
    coords_encode_method: grid

embedder:
    wave_embed_bias: True
    wave_embed_dim: 12
    wave_embed_omega: 1
    wave_embed_sigma: 1
    wave_embed_seed: 1

grid:
    grid_dim: 2
    grid_type: 'DenseGrid'
    grid_interpolation_type: 'linear'
    grid_multiscale_type: 'cat'
    grid_feature_dim: 2
    grid_feature_std: 1
    grid_num_lods: 1 #16 # max / min = b**l
    tree_type: 'geometric'
    min_grid_res: 64 #6
    max_grid_res: 64 #690 #160
    codebook_bitwidth: 20
    interpolation_align_corners: False

pretrain:
    pretrain_codebook: False

    pretrain_batch_size: 7000
    pretrain_pixel_beta: 1
    pretrain_redshift_beta: 0.1

    pretrain_use_all_wave: False
    pretrain_num_wave_samples: 50
    pretrain_wave_sample_method: 'uniform' #_non_random'

    pretrain_pixel_supervision: False

    pretrain_optimize_latents_alternately: False
    em_alternation_starts_with: "spectra_latents"
    em_alternation_steps: [10,20]

    negative_supervise_wrong_redshift: False
    neg_sup_with_optimal_wrong_bin: False
    neg_sup_beta: 1
    neg_sup_constant: 0.01

    neg_sup_optimize_alternately: False
    neg_sup_alternation_starts_with: "latents"
    neg_sup_alternation_steps: [1,1]

    zero_init_spectra_latents: False
    optimize_spectra_latents_as_logits: False
    optimize_spectra_latents: False
    load_pretrained_spectra_latents: False
    load_pretrained_spectra_latents_to_gt_bin_only: False
    optimize_codebook_logits_mlp: False
    load_pretrained_codebook_logits_mlp: False

    optimize_gt_bin_only: False
    dont_optimize_gt_bin: False

    brute_force_redshift: False
    binwise_loss_beta: 50
    use_binwise_spectra_loss_as_redshift_logits: False

    zero_init_redshift_latents: False
    optimize_redshift_latents_as_logits: False
    optimize_redshift_latents: False
    optimize_redshift_logits_mlp: False

    regularize_redshift_logits: False
    redshift_logits_regu_beta: 10
    redshift_logits_regu_method: 'laplace' #'l1'

    regularize_codebook_logits: False
    codebook_logits_regu_beta: 1

    regularize_spectra_latents: False
    spectra_latents_regu_beta: 1000

    binwise_spectra_latents_regu_beta: 4

    regularize_within_codebook_spectra: False
    regularize_across_codebook_spectra: False
    codebook_spectra_regu_beta: 1

    pretrain_log_dir: 20240202-222241_12_latent_dim_12_wave_dim_1_hidden_layer_50k_epochs
    pretrained_model_name: model-ep50000-bch0.pth

    split_latent: False
    use_latents_as_coords: False

    spectra_latent_dim: 12
    scaler_latent_dim: 0
    redshift_logit_latent_dim: 330

    main_train_with_pretrained_latents: False
    sanity_check_max_num_spectra: -1
    generalization_max_num_spectra: -1

    add_redshift_logit_bias: False
    plot_logits_for_gt_bin: False
    plot_individ_spectra_loss: False

    debug_lbfgs: False

    regress_lambdawise_weights: False
    lambdawise_weights_decoder_num_layers: 1
    lambdawise_weights_decoder_hidden_dim: 128

decoder:
    decoder_batch_norm: False
    decoder_num_hidden_layers: 1
    decoder_hidden_dim: 128
    decoder_layer_type: none
    decoder_activation_type: relu
    decoder_skip_layers: []

    siren_seed: 0
    siren_first_w0: 24
    siren_hidden_w0: 6
    siren_coords_scaler: 8
    siren_last_linear: False

qtz:
    quantize_latent: False
    quantize_spectra: False

    quantization_strategy: soft
    quantization_calculate_loss: False # only if hard qtz
    qtz_latent_dim: 32
    qtz_num_embed: 32
    qtz_beta: 1
    qtz_seed: 8

    temped_qtz: False
    qtz_temperature_scale: 0.01

spatial_decod:
    decode_bias: False
    decode_scaler: False

    spatial_decod_hidden_dim: 64
    spatial_decod_num_hidden_layers: 1
    spatial_decod_output_dim: 32
    spatial_decod_layer_type: 'none'
    spatial_decod_activation_type: 'relu'
    spatial_decod_skip_layers: []

    scaler_decod_hidden_dim: 64
    scaler_decod_num_hidden_layers: 1
    scaler_decod_layer_type: 'none'
    scaler_decod_activation_type: 'relu'
    scaler_decod_skip_layers: []

    redshift_decod_hidden_dim: 1024
    redshift_decod_num_hidden_layers: 1
    redshift_decod_layer_type: 'none'
    redshift_decod_activation_type: 'relu'
    redshift_decod_skip_layers: []

hyperspectral:
    use_batched_hps_model: True
    hps_combine_method: 'concat'
    integration_method: 'dot_prod'
    intensify_intensity: False
    intensification_method: 'sinh'
    spectra_batch_reduction_order: 'qtz_first' #bin_avg_first'

trainer:
    trainer_type: AstroTrainer
    log_dir: /scratch/projects/vision/data/pdr3/output

    plot_loss: True
    pixel_loss_cho: l1
    pixel_loss_reduction: none

    train_based_on_epochs: True

    num_epochs: 1000
    batch_size: 5500
    valid_every: -1
    log_cli_every: 200
    plot_grad_every: -1
    save_data_every: -1
    save_model_every: 200

    train_with_all_pixels: True
    train_pixel_ratio: 1

    learn_spectra_within_wave_range: True

    decode_spatial_embedding: False
    weight_train: False
    weight_by_wave_coverage: False

    spectra_beta: 1
    redshift_beta: 1

    uniform_sample_wave: True
    mixture_avg_per_band: True

    main_train_frozen_layer: ["nef.codebook.weight","spectra_decoder"]

    #### ******** Constantly modify ********
    train_spectra_pixels_only: False

    pixel_supervision: True
    spectra_supervision: False

    

    train_use_all_wave: False
    spectra_supervision_use_all_wave: False

    train_num_wave_samples: 50
    spectra_supervision_num_wave_samples: 100

    resume_train: False
    resume_log_dir: ''
    # resume_model_fname: 'model-step10000.pth'
    resume_model_fname: 'model-ep50000-bch0.pth'
    #### ***********************************

infer:
    inferrer_type: 'AstroInferrer'
    infer_last_model_only: True

    infer_batch_size: 500
    pretrain_infer_batch_size: 5 #10

    infer_use_all_wave: False
    # infer_num_wave: 
    pretrain_infer_use_all_wave: False
    pretrain_infer_num_wave: 200
    pretrain_infer_wave_sample_method: 'uniform_non_random'

    # recon img
    to_HDU: False
    # infer_log_dir: ''
    metric_options: ['mse','ssim','psnr']
    spectra_metric_options: [] #['zncc']
    spectra_zncc_window_width: 500
    calculate_sliding_zncc_above_threshold: True
    log_pixel_ratio: True
    plot_residual_map: True
    img_resid_lo: -10
    img_resid_hi: 10

    recon_zoomed: False
    recon_cutout_patch_uids: ['981215']
    # each patch may have multiple cutouts
    recon_cutout_sizes: [ [64],[32] ]
    recon_cutout_start_pos: [ [[256,256]], [[86,188]] ]

    # recon spectra
    spectra_neighbour_size: -1
    flux_norm_cho: "identity"
    average_neighbour_spectra: False
    infer_spectra_individually: False

    num_spectrum_per_fig: 35
    num_spectrum_per_row: 4

    infer_selected: False
    pretrain_num_infer_upper_bound: 70
    test_num_infer_upper_bound: 10
    spectra_inferrence_id_fname: ''
    infer_outlier_only: False

    spectra_markers: [".",",","o","v","^","<",">","1","2","3","4","8","s","p","P","*","h","H","+","x","X","D","d","|","_"]
    mark_spectra: True
    plot_clipped_spectrum: True
    plot_spectrum_together: True
    plot_spectrum_with_gt: True
    plot_spectrum_with_recon: True
    plot_spectrum_with_trans: False

    plot_spectrum_under_gt_bin: False
    plot_spectrum_under_optimal_wrong_bin: False
    plot_codebook_coeff_under_optimal_wrong_bin: False

    plot_spectrum_according_to_zncc: True
    plot_spectrum_with_sliding_zncc: False
    local_zncc_threshold: 0.5

    plot_residual_with_ivar: False  # 
    plot_residual_times_ivar: False # exclusive
    plot_ivar_region: True          #

    # plot redshift estimation statistics
    plot_redshift_est_stats_individually: False
    redshift_est_stats_cho: 'accuracy'
    calculate_redshift_est_stats_based_on: 'residuals'
    num_redshift_est_stats_residual_levels: 10

    log_redshift_est_stats: False
    redshift_est_stats_residual_levels: []

    # plot pca latents scatter plot
    sanity_check_plot_same_pca_dim_as_pretrain: False
    pretrain_pca_dim_fname: ''
    spectra_latents_plot_pca_dim: -1

dataset:
    dataset_num_workers: 0
    space_dim: 3

    dataset_type: 'astro'
    plot_img_distrib: True
    load_patch_data_cache: True

    calculate_wave_range_based_on_trans: False
    calculate_wave_range_based_on_spectra: False
    wave_range_fname: 'wave_range0.npy'

    coords_type: img
    normalize_coords: True
    gt_img_norm_cho: identity   # identity/arcsinh/linear/clip(0,1)
    train_pixels_norm: identity # identity/arcsinh/sinh/linear/clip(0,1)

patch_data:
    tracts: ['9812']
    patches: ['1,5']
    use_full_patch: False

    #### *** test patches ****
    test_tracts: []
    test_patches: []
    use_full_test_patch: False
    # TODO: add cutout config
    #### *********************

    #### **** below fields should be changed together ****
    patch_selection_cho: 64_cutout
    # if don't use full patch, we can select cutout from tiles
    patch_cutout_num_rows: [64]
    patch_cutout_num_cols: [64]
    patch_cutout_start_pos: [[86,188]] #[[1917,754]] #[[1750,550]]
    #### *************************************************

trans_data:
    num_bands: 5
    sensor_collection_name: '5_grizy'
    filter_ids: [0,1,2,3,4]
    filters: [g,r,i,z,y]
    sensors_full_name: [HSC-G,HSC-R,HSC-I,HSC-Z,HSC-Y]
    plot_labels: ['g', 'r', 'i', 'z', 'y']
    plot_colors: ['green','red','blue','gray','yellow']
    plot_styles: ['solid','solid','solid','solid','solid']

    plot_trans: True
    trans_sample_method: 'mixture'
    trans_threshold: 1e-4
    hardcode_num_trans_samples: 12
    trans_sample_interval: 10

redshift_data:
    correct_gt_redshift_based_on_redshift_bin: True

spectra_data:
    spectra_cho: v1
    spectra_drop_not_in_patch: False
    spectra_process_patch_info: True
    spectra_data_sources: [deimos,zcosmos,vipers_w1,vipers_w4]

    max_spectra_len: 8191 # hardcoded

    num_gt_spectra_upper_bound: -1 # spectra to load
    num_supervision_spectra_upper_bound: -1
    sample_from_pretrain_spectra: False
    sanity_check_max_num_spectra: -1
    add_validation_spectra_not_in_supervision: False
    num_extra_validation_spectra: 20
    generalization_max_num_spectra: 500

    val_spectra_ratio: 0.2
    sup_spectra_ratio: 0.9
    spectra_split_ratios: [0.1,0,0.9]

    # **** Below fields should be modified together ****
    spectra_tracts: ['9569','9570','9571','9572','9812','9813','9814','10054','10055','10056']
    spectra_patches_r: ['0','1','2','3','4','5','6','7','8']
    spectra_patches_c: ['0','1','2','3','4','5','6','7','8']
    # **************************************************

    process_ivar: True
    convolve_spectra: True
    spectra_smooth_sigma: -1

    spectra_supervision_wave_lo: 6000
    spectra_supervision_wave_hi: 8000
    codebook_spectra_plot_wave_lo: 6000
    codebook_spectra_plot_wave_hi: 8000
    load_spectra_data_from_cache: True
    # debug1: 300 spectra [9812][0,1][0-8] normed
    # debug2: 30 spectra [9812][0][0,1,2] normed

    redshift_lo: -0.09
    redshift_hi: 6.5
    redshift_bin_width: 0.02

    filter_redshift: False
    filter_redshift_lo: -1
    filter_redshift_hi: -1

    redshift_classification_sc_data_dir: nan
    redshift_classification_genlz_data_dir: nan
    redshift_classification_data_fname_prefix: nan

inpaint:
    perform_inpainting: True
    inpaint_cho: spectral_inpaint # no_inpaint
    inpaint_sample_ratio: 0 #0.001 # 0-1
    plot_masked_gt: True

    # assume max set is 10 bands in this order [GRIZY,nb387,nb816,nb921,u,us]
    # always makes sure mask creation is called for a continuous set of bands
    # if train and inpaint bands dont form a continuous seq e.g. (train [1R,8u], inpaint [8u])
    # set mask band to any set of continuous bands that include current train and inpaint bands,
    # preferrably something like [0,1,2,3,4,5,6,7,8].
    # When do masking, pick only 1 and 8 channel from the full mask

    # define mask directory
    mask_mode: rand_same
    mask_bandset_cho: 5grizy # *change everytime
    mask_seed: 0             # seed to do random masking

    # define current train and inpaint bands (only used by spectral inpainting)
    # for us band, we use mask created for all 10 bands, where us is
    # 9th train_bands: [0,1,3,4,5,6,8]
    train_bands: [0,2,3,4]
    inpaint_bands: [1]
    relative_train_bands: [0,2,3,4]
    relative_inpaint_bands: [1]
    # train_bands: [0,1,3,4,5,6,8]
    # inpaint_bands: [2,7,9]
    # relative_train_bands: [0,1,3,4,5,6,8]
    # relative_inpaint_bands: [2,7,9]
