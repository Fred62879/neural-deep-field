
global:
    verbose: True
    print_shape: False
    activate_timer: False
    dataloader_drop_last: True
    exp_name: 'test-ngp-nerf'
    use_gpu: True


    #tasks: ['train','save_recon_during_train','infer','recon_img'] #,'plot_save_scaler']
    #tasks: ['infer','recon_img','plot_save_scaler']
    #tasks: ['infer','plot_save_scaler']

    #tasks: ['train','plot_spectra_during_train','infer','recon_gt_spectra']
    #tasks: ['infer','recon_gt_spectra']

    #tasks: ['train','save_recon_during_train','plot_spectra_during_train','infer','recon_img','recon_gt_spectra']
    #tasks: ['infer','recon_gt_spectra','recon_img']

    #tasks: ['train','plot_save_scaler','save_latent_during_train','save_recon_during_train','plot_embed_map_during_train','infer','recon_img','plot_embed_map','plot_latent_embed']
    #tasks: ['infer','recon_img','plot_embed_map','plot_save_scaler']

    #tasks: ['train','save_latent_during_train','save_recon_during_train','plot_embed_map_during_train','plot_spectra_during_train','infer','recon_img','recon_gt_spectra','plot_embed_map','plot_laten_embed','recon_codebook_spectra','plot_redshift','plot_save_scaler']
    tasks: ['train','save_codebook','infer','recon_img','recon_gt_spectra','plot_embed_map','recon_codebook_spectra','plot_redshift','plot_save_scaler','save_soft_qtz_weights','plot_latent_embed'] #,'recon_dummy_spectra']

    #tasks: ['infer','recon_img','recon_gt_spectra','recon_codebook_spectra','plot_embed_map','plot_redshift','plot_save_scaler','save_soft_qtz_weights','plot_latent_embed']
    #tasks: ['infer','recon_img','plot_embed_map','plot_redshift','plot_save_scaler','save_soft_qtz_weights']
    #tasks: ['infer','plot_embed_map','plot_redshift']
    #tasks: ['infer','recon_gt_spectra','recon_codebook_spectra'] #,'recon_dummy_spectra']
    #tasks: ['infer','plot_latent_embed']

    #tasks: ['infer','recon_img','recon_synthetic_band','plot_embed_map']
    #tasks: ['infer','plot_redshift']
    #tasks: ['infer','plot_save_scaler','plot_redshift']
    #tasks: ['infer','recon_gt_spectra'] #,'log_pixel_value']
    #tasks: ['infer','recon_dummy_spectra','recon_gt_spectra']
    #tasks: ['infer','recon_codebook_spectra']

    #tasks: ['infer','plot_pixel_distrib']
    #tasks: ['infer','save_soft_qtz_weights']

optimizer:
    optimizer_type: 'adam'
    b1: 0.5
    b2: 0.999
    lr: 1e-3
    hps_lr: 1e-4
    qtz_lr: 1e-6
    weight_decay: 1e-5
    grid_lr_weight: 100

net:
    nef_type: 'AstroHyperSpectralNerf'
    #nef_type: 'AstroNerf'
    encode_wave: True
    encode_coords: True
    coords_encode_method: 'grid' #'positional_encoding'
    wave_encode_method: 'positional_encoding'
    mlp_output_norm_method: 'sinh'

embedder:
    coords_embed_bias: True
    coords_embed_dim: 500
    coords_embed_omega: 8
    coords_embed_sigma: 1.0
    coords_embed_seed: 2

    wave_embed_bias: True
    wave_embed_dim: 16
    wave_embed_omega: 1
    wave_embed_sigma: 1
    wave_embed_seed: 1

    wave_encoder_num_hidden_layers: 2
    wave_encoder_hidden_dim: 64
    wave_encoder_siren_first_w0: 6
    wave_encoder_siren_hidden_w0: 30
    wave_encoder_siren_seed: 0
    wave_encoder_siren_coords_scaler: 1
    wave_encoder_siren_last_linear: False

grid:
    grid_dim: 3
    grid_type: 'HashGrid'
    grid_interpolation_type: 'linear'
    grid_multiscale_type: 'cat'
    grid_feature_dim: 2
    grid_feature_std: 1
    grid_num_lods: 16  #20 # max / min = b**l
    tree_type: 'geometric'
    min_grid_res: 6 #16
    max_grid_res: 160 #646 #330 #1443 #1352 #2831 #690 #160
    codebook_bitwidth: 20

decoder:
    decoder_num_layers: 1
    decoder_hidden_dim: 64
    decoder_layer_type: 'none'
    decoder_activation_type: "relu"

    siren_seed: 0
    siren_first_w0: 24
    siren_hidden_w0: 6
    siren_coords_scaler: 8
    siren_last_linear: True

qtz:
    quantization_strategy: 'soft'
    qtz_latent_dim: 16
    qtz_num_embed: 4
    qtz_beta: 1
    qtz_seed: 8
    qtz_temperature_scale: 0.01

spatial_decod:
    generate_scaler: True
    generate_redshift: False

    spatial_decod_hidden_dim: 64
    spatial_decod_num_hidden_layers: 1
    spatial_decod_output_dim: 16
    spatial_decod_layer_type: 'none'
    spatial_decod_activation_type: 'relu'

    scaler_decod_hidden_dim: 64
    scaler_decod_num_hidden_layers: 1
    scaler_decod_layer_type: 'none'
    scaler_decod_activation_type: 'relu'

    redshift_decod_hidden_dim: 64
    redshift_decod_num_hidden_layers: 1
    redshift_decod_layer_type: 'none'
    redshift_decod_activation_type: 'relu'

hyperspectral:
    hps_combine_method: 'concat'
    integration_method: 'dot_prod'

trainer:
    trainer_type: 'AstroTrainer'
    log_dir: '../../data/pdr3/output'
    perf: False

    pixel_loss_cho: l1
    spectra_loss_cho: l2
    redshift_loss_cho: l2
    num_epochs: 2000
    batch_size: 65536 #262144
    save_every: 400
    render_tb_every: -1
    log_tb_every: -1
    log_cli_every: 200
    log_gpu_every: -1
    plot_grad_every: 50
    save_local_every: -1
    save_as_new: True
    train_pixel_ratio: .1 # change dataloader sampler
    #masked_pixl_ratio_per_epoch: 1
    gpu_data: ['coords','pixels','weights','full_wave','wave','trans','nsmpl','gt_spectra','masks','redshift']

    pixel_supervision: True
    spectra_supervision: True
    redshift_supervision: False
    spectra_beta: 1
    redshift_beta: 1
    spectra_supervision_start_epoch: 0

    decode_spatial_embedding: True
    quantize_latent: False
    quantize_spectra: True
    weight_train: False
    train_use_all_wave: False
    resume_train: False
    #resume_log_dir: '20230404-123911_no_spatial_decode'
    #pretrained_model_name: 'model-ep2000-it0.pth'

    num_trans_samples: 40
    uniform_sample_trans: True
    mixture_avg_per_band: True

    # spectra supervision
    num_supervision_spectra: 5
    spectra_neighbour_size: 1

infer:
    inferrer_type: 'AstroInferrer'
    infer_batch_size: 100 #4096 #20000 #36864
    infer_use_all_wave: True # enforced
    infer_last_model_only: True

    # recon img
    to_HDU: False
    #infer_log_fname: '20230427-111337_qtz_spectra_2048'
    metric_options: ['mse','ssim','psnr']

    recon_zoomed: False
    recon_cutout_fits_uids: ['981215'] #,'981217']
    # each fits may have multiple cutouts
    recon_cutout_sizes: [ [64] ] #, [32] ]
    recon_cutout_start_pos: [ [[256,256]] ] #, [[86,188]] ] #[86,188]

    # recon spectra
    spectra_norm_cho: "sum"
    average_spectra: True
    trusted_range_only: True     # for gt spectra
    plot_clipped_spectrum: True  # for recon spectra
    plot_spectrum_with_gt: True
    plot_spectrum_with_trans: False
    plot_spectrum_together: True
    infer_spectra_individually: False
    num_spectra_plot_per_row: 5
    codebook_spectra_clip_range: [6000,8000]
    dummy_spectra_clip_range: [6000,8000]

    mark_spectra: True

dataset:
    dataset_num_workers: 0
    space_dim: 3
    dataset_type: 'astro'
    plot_img_distrib: True
    load_fits_data_cache: True
    dataset_path: '../../data/pdr3'
    gt_img_norm_cho: 'identity'   # identity/arcsinh/linear/clip(0,1)
    train_pixels_norm: 'identity' # identity/arcsinh/sinh/linear/clip(0,1)

    use_full_fits: False

    # if don't use full fits, we can select cutout from tiles
    # the order of the following 5 fields corresponds to each other
    fits_footprints: ['9812']
    fits_tile_ids: ['1']
    fits_subtile_ids: ['5']
    fits_cutout_num_rows: [2048]
    fits_cutout_num_cols: [2048]
    fits_cutout_start_pos: [[0,0]] #[[1750,550]] #[[1867,535]] #[[2009,917]] #[[1970,758]]

    #num_bands: 1
    #sensor_collection_name: '1_i'
    #filter_ids: [2]
    #filters: [i]
    #sensors_full_name: [HSC-I]
    #plot_labels: ['i']
    #plot_colors: ['blue']
    #plot_styles: ['solid']

    num_bands: 5
    sensor_collection_name: '5_grizy'
    filter_ids: [0,1,2,3,4]
    filters: [g,r,i,z,y]
    sensors_full_name: [HSC-G,HSC-R,HSC-I,HSC-Z,HSC-Y]
    plot_labels: ['g', 'r', 'i', 'z', 'y']
    plot_colors: ['green','red','blue','gray','yellow']
    plot_styles: ['solid','solid','solid','solid','solid']

    # num_bands: 10
    # sensor_collection_name: '10'
    # filter_ids: [0,1,2,3,4,5,6,7,8,9]
    # filters: [g,r,i,z,y,nb387,nb816,nb921,u,us]
    # sensors_full_name: [HSC-G,HSC-R,HSC-I,HSC-Z,HSC-Y,NB0387,NB0816,NB0921,u,uS]
    # plot_labels: ['g', 'r', 'i', 'z', 'y', 'nb387', 'nb816', 'nb921','u','u*']
    # plot_colors: ['green','red','blue','gray','yellow','gray','red','blue','yellow','blue']    
    # plot_styles: ['solid','solid','solid','solid','solid','dashed','dashed','dashed','dashdot','dashdot']

    plot_trans: True
    trans_sample_method: 'mixture'
    trans_threshold: 1e-3
    hardcode_num_trans_samples: 12
    trans_sample_interval: 10

    gt_spectra_ids: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17] #,18,19] #[0,1,3,5,7,2,4,6,8,9] #[0,1,2,3,4,5,6,7,8,9] [5,6,7,8,9]

    spectra_smooth_sigma: 50
    # spectra_markers: ["o","v","^","<",">","1","2","3","4","+","x"]
    spectra_markers: [".",",","o","v","^","<",">","1","2","3","4","8","s","p","P","*","h","H","+","x","X","D","d","|","_"]

inpaint:
    inpaint_cho: 'no_inpaint' #'spectral_inpaint'
    inpaint_sample_ratio: 0.01 # 0-1
    plot_masked_gt: True

    # assume max set is 10 bands in this order [GRIZY,nb387,nb816,nb921,u,us]
    # always makes sure mask creation is called for a continuous set of bands
    # if train and inpaint bands dont form a continuous seq e.g. (train [1R,8u], inpaint [8u])
    # set mask band to any set of continuous bands that include current train and inpaint bands,
    # preferrably something like [0,1,2,3,4,5,6,7,8].
    # When do masking, pick only 1 and 8 channel from the full mask

    # define mask directory
    mask_mode: 'rand_same'
    mask_bandset_cho: '5grizy' # *change everytime
    mask_seed: 0              # seed to do random masking

    # define current train and inpaint bands (only used by spectral inpainting)
    # for us band, we use mask created for all 10 bands, where us is 9th train_bands: [0,1,3,4,5,6,8]
    #train_bands: [0,1,3,4,5,6,8]
    #inpaint_bands: [2,7,9]
    #relative_train_bands: [0,1,3,4,5,6,8]
    #relative_inpaint_bands: [2,7,9]
    train_bands: [0,2,3,4]
    inpaint_bands: [1]
    relative_train_bands: [0,2,3,4]
    relative_inpaint_bands: [1]