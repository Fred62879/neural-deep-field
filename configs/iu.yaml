
global:
    debug: False
    verbose: True
    print_shape: False
    dataloader_drop_last: True
    exp_name: 'test-ngp-nerf'

    #tasks: ['train','save_recon_during_train','infer','recon_img']
    #tasks: ['infer','recon_img']

    #tasks: ['train','plot_spectra_during_train','infer','recon_gt_spectra']
    #tasks: ['infer','recon_gt_spectra']

    #tasks: ['train','save_recon_during_train','plot_spectra_during_train','infer','recon_img','recon_gt_spectra']
    #tasks: ['infer','recon_gt_spectra']

    #tasks: ['train','plot_save_scaler','save_latent_during_train','save_recon_during_train','plot_embed_map_during_train','infer','recon_img','plot_embed_map','plot_latent_embed']
    #tasks: ['infer','recon_img','plot_embed_map','plot_latent_embed','plot_save_scaler']

    #tasks: ['train','save_latent_during_train','save_recon_during_train','plot_embed_map_during_train','plot_spectra_during_train','infer','recon_img','recon_gt_spectra','plot_embed_map','plot_latent_embed','recon_codebook_spectra']
    #tasks: ['infer','recon_img','recon_gt_spectra','recon_codebook_spectra','plot_embed_map','plot_latent_embed']
    tasks: ['infer','recon_gt_spectra']

optimizer:
    optimizer_type: 'adam'
    lr: 1e-3
    b1: 0.5
    b2: 0.999
    weight_decay: 1e-5
    hps_lr: 1e-5

net:
    nef_type: 'AstroHyperSpectralNerf'
    #nef_type: 'AstroNerf'
    coords_encode_method: 'positional'
    wave_encode_method: 'positional'
    mlp_output_norm_method: 'sinh'

embedder:
    coords_embed_bias: True
    coords_embed_dim: 1000
    coords_embed_omega: 8
    coords_embed_sigma: 1.0
    coords_embed_seed: 2

    wave_embed_bias: True
    wave_embed_dim: 16
    wave_embed_omega: 1
    wave_embed_sigma: 1
    wave_embed_seed: 1

grid:
    grid_dim: 2
    grid_type: 'HashGrid'
    grid_interpolation_type: 'linear'
    grid_multiscale_type: 'cat'
    grid_feature_dim: 2
    grid_feature_std: 0.01
    grid_num_lods: 10  # max / min = b**l
    tree_type: 'geometric'
    min_grid_res: 1
    max_grid_res: 256
    codebook_bitwidth: 22

decoder:
    decoder_num_layers: 3
    decoder_hidden_dim: 256
    decoder_layer_type: 'none'
    decoder_activation_type: "sin"

    siren_seed: 0
    siren_first_w0: 24
    siren_hidden_w0: 6
    siren_coords_scaler: 8
    siren_last_linear: True

qtz:
    generate_scaler: True
    generate_redshift: False

    qtz_latent_dim: 16
    qtz_num_embed: 4
    qtz_beta: 0.01
    qtz_seed: 8

    qtz_decod_hidden_dim: 256
    qtz_decod_num_hidden_layers: 1
    qtz_decod_layer_type: 'none'
    qtz_decod_activation_type: 'relu'

hyperspectral:
    hps_combine_method: 'concat'
    integration_method: 'dot_prod'

trainer:
    trainer_type: 'AstroTrainer'
    log_dir: '../../data/pdr3/output'

    loss_cho: l1
    num_epochs: 6000
    batch_size: 2048 #16384
    save_every: 600
    render_tb_every: -1
    log_tb_every: 600
    log_gpu_every: -1
    save_local_every: 600
    save_as_new: True
    train_pixel_ratio: 0.1
    #masked_pixl_ratio_per_epoch: 1
    gpu_data: ['coords','pixels','weights','full_wave','wave','trans','nsmpl','gt_spectra','masks']

    pixel_supervision: True
    spectra_supervision: True
    spectra_beta: 0.01

    quantize_latent: True
    weight_train: False
    train_use_all_wave: False
    resume_train: False
    #resume_log_dir: '20221220-194546'
    #pretrained_model_name: 'model-ep800-it2.pth'

    num_trans_samples: 40
    uniform_sample_trans: True
    mixture_avg_per_band: True

    # spectra supervision
    num_supervision_spectra: 1
    spectra_neighbour_size: 1

infer:
    inferrer_type: 'AstroInferrer'
    infer_batch_size: 128
    infer_use_all_wave: True # enforced
    infer_last_model_only: False

    # recon img
    to_HDU: True
    #infer_log_fname: '20221219-175517'
    metric_options: ['mse','ssim','psnr']

    #recon_cutout_fits_ids: ['981215','981217']
    # each fits may have multiple cutouts
    #recon_cutout_sizes: [ [64], [32] ]
    #recon_cutout_start_pos: [ [[0,0]], [[0,0]] ] #[86,188]

    # recon spectra
    average_spectra: True
    plot_spectrum_with_trans: True
    infer_spectra_individually: True

dataset:
    space_dim: 3
    dataset_type: 'astro'
    load_fits_data_cache: True
    dataset_path: '../../data/pdr3'
    gt_img_norm_cho: 'identity'   # identity/arcsinh/linear/clip(0,1)
    train_pixels_norm: 'identity' # identity/arcsinh/sinh/linear/clip(0,1)

    use_full_fits: False

    # if don't use full fits, we can select cutout from tiles
    # the order of the following 5 fields corresponds to each other
    fits_footprints: ['9812']
    fits_tile_ids: ['1']
    fits_subtile_ids: ['5']
    fits_cutout_sizes: [ 64 ] #256 ]
    fits_cutout_start_pos: [[86,188]] #[[1750,550]]

    # num_bands: 1
    # sensor_collection_name: '1_y'
    # filter_ids: [4]
    # filters: [y]
    # sensors_full_name: [HSC-Y]

    num_bands: 5
    sensor_collection_name: '5_grizy'
    filter_ids: [0,1,2,3,4]
    filters: [g,r,i,z,y]
    sensors_full_name: [HSC-G,HSC-R,HSC-I,HSC-Z,HSC-Y]
    plot_labels: ['g', 'r', 'i', 'z', 'y']
    plot_colors: ['green','red','blue','gray','yellow']
    plot_styles: ['solid','solid','solid','solid','solid']

    # num_bands: 10
    # sensor_collection_name: '10'
    # filter_ids: [0,1,2,3,4,5,6,7,8,9]
    # filters: [g,r,i,z,y,nb387,nb816,nb921,u,us]
    # sensors_full_name: [HSC-G,HSC-R,HSC-I,HSC-Z,HSC-Y,NB0387,NB0816,NB0921,u,uS]
    # plot_labels: ['g', 'r', 'i', 'z', 'y', 'nb387', 'nb816', 'nb921','u','u*']
    # plot_colors: ['green','red','blue','gray','yellow','gray','red','blue','yellow','blue']    
    # plot_styles: ['solid','solid','solid','solid','solid','dashed','dashed','dashed','dashdot','dashdot']

    plot_trans: True
    trans_sample_method: 'mixture'
    trans_threshold: 1e-3
    hardcode_num_trans_samples: 40
    trans_sample_interval: 10

    gt_spectra_choices: [0] #[1,2,3,4]

inpaint:
    inpaint_cho: 'no_inpaint' # 'spectral_inpaint'
    sample_ratio: .01 # 0-1

    # assume max set is 10 bands in this order [GRIZY,nb387,nb816,nb921,u,us]
    # always makes sure mask creation is called for a continuous set of bands
    # if train and inpaint bands dont form a continuous seq e.g. (train [1R,8u], inpaint [8u])
    # set mask band to any set of continuous bands that include current train and inpaint bands,
    # preferrably something like [0,1,2,3,4,5,6,7,8].
    # When do masking, pick only 1 and 8 channel from the full mask

    # define mask directory
    mask_config: 'rand_same'
    mask_bandset_cho: '5grizy' # *change everytime
    mask_seed: 0              # seed to do random masking

    # define current train and inpaint bands (only used by spectral inpainting)
    # for us band, we use mask created for all 10 bands, where us is 9th train_bands: [0,1,3,4,5,6,8]
    #train_bands: [0,1,3,4,5,6,8]
    #inpaint_bands: [2,7,9]
    #relative_train_bands: [0,1,3,4,5,6,8]
    #relative_inpaint_bands: [2,7,9]
    train_bands: [0,2,3,4]
    inpaint_bands: [1]
    relative_train_bands: [0,2,3,4]
    relative_inpaint_bands: [1]